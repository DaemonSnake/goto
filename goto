#!/bin/bash
# Copyright (C) 2016  Bastien Penavayre

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

function __goto_find()
{
    grep "^$1" $user_file;
}

function __goto_remove()
{
    for arg in $@;
    do
        echo "The following entries are about to be removed:"
        grep "^$arg" "$user_file"
        read -p "Are you sure ? (y/n): " -n 1 choice
        echo ""
        case "$choice" in
            y|Y)
                ;;
            *)
                continue
                ;;
        esac;
        sed -i '/^'"$arg"'/d' $user_file;
    done;
}

function __goto_add()
{
    local name="$1"
    local folder=$(pwd);
    
    if [ $# -eq 2 ];
    then
        folder="$2"
        if [ "${folder:0:1}" != "/" ];
        then
            folder="$(pwd)/$folder"
        fi;
    fi;
    
    sed -i '/^'"$name"'/d' $user_file
    echo "$name $folder" >> $user_file
}

function __goto_list()
{
    cat "$user_file" | awk '{print $1}'
}

function __goto_goto()
{
    local key=$1 path=$2
    # IFS='/' read -r key path <<< "$1"; #for when autocomplete will work with KEY/SUBPATH
    local result=$(sed -n "/^$key/p" $user_file)
    if [ -z "$result" ]
    then
        if [ $key == "__DEFAULT__" ]; then
            echo "default dirrectory not set : use --setdef" > /dev/stderr;
        else
            echo "not such key to goto: \"$key\"" > /dev/stderr;
        fi;
    else
        cd "$(echo $result | uniq | awk '{print $2}')/$path"
    fi;
}

function __goto_help()
{
    echo "usage: goto [KEY/SUBPATH] [--list] [--add KEY [PATH]] [--setdef] [--find KEY] [--remove KEYS...] [--help]

description:
 jump to the associated value of the given KEY if given otherwise of __DEFAULT__

commands:
 KEY                  search the value associated with KEY and use 'cd' on it
 --list               list all the possible keys to use
 --add NAME [PATH]    adds a new key NAME with the value of PATH if it's given
                      otherwise use the current dirrectory
 --setdef [PATH]      set default goto location with the value of PATH if it's given
                      otherwise use the current dirrectory
 --find NAME          outputs all the keys starting with NAME along with their path
 --remove NAMES...    for each argument lists all the matching lines and asks if you wish to delete all of those
 --help               print this message";
}

function __goto_iterate()
{
    case $1 in
        --help)
            __goto_help
            ;;
        --add)
            __goto_add $2 $3
            ;;
        --setdef)
            __goto_add __DEFAULT__ $2
            ;;
        --list)
            __goto_list
            ;;
        --find)
            __goto_find "$2"
            ;;
        --remove)
            __goto_remove "${@:2}"
            ;;
        *)
            __goto_goto $1 $2
            ;;
    esac
}

function __launch_goto()
{
    local user_file=$HOME/.goto_list
    if [ ! -z $SUDO_USER ];
    then
        user_file="$(echo ~$SUDO_USER/.goto_list)";
    fi;
    user_file=`eval echo $user_file`;

    
    if [ $# -eq 0 ];
    then
        __goto_goto __DEFAULT__
    else
        __goto_iterate $@;
    fi;
}

__launch_goto $@;
