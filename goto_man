.\" Copyright (C) 2016  Bastien Penavayre
.\" Permission is hereby granted, free of charge, to any person obtaining a copy
.\" of this software and associated documentation files (the "Software"), to deal
.\" in the Software without restriction, including without limitation the rights
.\" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
.\" copies of the Software, and to permit persons to whom the Software is
.\" furnished to do so, subject to the following conditions:
.\" The above copyright notice and this permission notice shall be included in
.\" all copies or substantial portions of the Software.
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
.\" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
.\" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
.\" THE SOFTWARE.
.\" Manpage for nuseradd.
.\" Contact vivek@nixcraft.net.in to correct errors or typos.
.TH man 1 "06 June 2016" "1.0" "Goto manual for bash"
.SH NAME
goto \- jump from working directory to the associated value of the given key
.SH SYNOPSIS
goto [KEY [SUBPATH]] [--list] [--add KEY [PATH]] [--setdef] [--find [-k|-v] KEY] [--remove KEYS...] [--help]
.SH DESCRIPTION
The goto utility shall change the working directory by using the given KEY's associated value (by default the key is __DEFAULT__) in its .goto_list file.

This file contains on each line a KEY and a PATH separated by a space. The file is located in the home directory of the calling user (~/.goto_list).

If the KEY is followed by a path then it will be used as subpath for the keys directory.

For its update on the working directory to be applied, goto requires to be defined as the following alias in the .bashrc of the user:
   alias goto="source _goto"
.SH OPTIONS
The goto utility supports the following options:

--list    Lists all the KEYs contained in the .goto_list file.

--add     Adds the KEY to the .goto_list file with, as value, either the PATH if it's given.
          Otherwise the current working dirrectory.

--setdef  Sets the default KEY that is used when calling goto without
          any arguments.
          Equivalent to : --add __DEFAULT__ [PATH]

--find    Lists all keys, along with their values, starting with the given argument.
          Options:
                -k lists only the keys
                -v lists only the paths

--remove  For each argument remove all matching keys after printing them and asking
          for confirmation.

--help    print on the standard output a small description of goto's usage.

.SH EXAMPLES
.PP
.nf
$ pwd
~/folder/projects
$ goto --add gotoProject;
$ mkdir subfolder;
$ cd;
$ goto gotoProject subfolder;
$ pwd;
~/folder/projects/goto/subfolder
$ goto --setdef;
$ cd ;
$ goto;
$ pwd
~/folder/projects/goto/subfolder;
$ goto list;
gotoProject
__DEFAULT__
$ goto --find gotoProj;
gotoProject /home/user/folder/projects/goto/subfolder
$ goto --find -k gotoProj;
gotoProject
$ goto --find -v gotoProj;
/home/user/folder/projects/goto/subfolder

.SH SEE ALSO
cd(P), sed(1)
.SH BUGS
The autocomplete script doesn't yet handle the autocompletion on the subpath argument of keys.
.SH AUTHOR
Bastien Penavayre ( bastienPenava@gmail.com )